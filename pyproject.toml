[tool.poetry]
name = "pyixapi"
version = "0.2.3"
description = "Python API client library for IX-API"
authors = ["Guillaume Mazoyer <oss@mazoyer.eu>"]
readme = "README.md"
license = "Apache-2.0"
packages = [{ include = "pyixapi" }]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.8"
PyJWT = ">=2.4.0,<2.10"
requests = ">=2.20.0,<3.0"

[tool.poetry.group.dev.dependencies]
pytest = "*"
ruff = "~0.7"

[tool.ruff]
line-length = 88

exclude = [".git", ".tox", ".venv", "env", "_build", "build", "dist", "examples", "__main__.py"]

[tool.ruff.lint]
preview = true

select = [
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "C90",   # mccabe complexity
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle errors
    "EXE",   # flake8-executable
    "F",     # pyflakes
    "I",     # isort-like checks
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "N",     # pep8-naming
    "PIE",   # flake8-pie
    "PL",    # pylint
    "PTH",   # flake8-use-pathlib
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "TCH",   # flake8-type-checking
    "T10",   # flake8-debugger
    "UP",    # pyupgrade
    "W",     # pycodestyle warnings
    "YTT",   # flake8-2020
]

ignore = ["PLR0913", "PLR0917", "PLW3201"]

task-tags = ["FIXME", "TODO", "XXX"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.ruff.lint.mccabe]
max-complexity = 31

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
